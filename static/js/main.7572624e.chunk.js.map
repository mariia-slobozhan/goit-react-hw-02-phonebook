{"version":3,"sources":["Components/PhonebookForm/PhonebookForm.js","Components/ContactItem/ContactItem.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["PhonebookForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","addNewContact","resetForm","this","onSubmit","type","pattern","title","required","onChange","Component","ContactItem","tel","id","onDeleteContact","onClick","ContactList","items","map","item","uuidv4","Filter","App","contacts","filter","contact","prevState","normalizedContact","toLowerCase","some","el","alert","changeFilter","getVisiableContacts","normalizedContacts","includes","deleteContact","contactId","visiableContacts","list","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7572624e.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class PhonebookForm extends Component {\n  static propTypes = {\n    addNewContact: PropTypes.func,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.addNewContact(this.state);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleChange } = this;\n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n            value={name}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n            value={number}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactItem({ name, tel, id, onDeleteContact }) {\n  return (\n    <li id={id}>\n      <span>{name}</span>\n      <span>{tel}</span>\n      <button onClick={() => onDeleteContact(id)} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  tel: PropTypes.string,\n  id: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n","import React from \"react\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactList({ items, onDeleteContact }) {\n  return (\n    <ul>\n      {items.map((item) => (\n        <ContactItem\n          key={uuidv4()}\n          id={item.id}\n          name={item.name}\n          tel={item.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PhonebookForm from \"./Components/PhonebookForm/PhonebookForm\";\nimport ContactList from \"./Components/ContactsList/ContactsList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addNewContact = (contact) => {\n    this.setState((prevState) => {\n      const normalizedContact = contact.name.toLowerCase();\n      return prevState.contacts.some(\n        (el) => el.name.toLowerCase() === normalizedContact\n      )\n        ? alert(`${contact.name} is already in contact list`)\n        : { contacts: [...prevState.contacts, { ...contact, id: uuidv4() }] };\n    });\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisiableContacts = () => {\n    const normalizedContacts = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedContacts)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const visiableContacts = this.getVisiableContacts();\n    const { contacts } = this.state;\n    const { addNewContact, changeFilter, deleteContact } = this;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <PhonebookForm list={contacts} addNewContact={addNewContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={changeFilter} />\n        <ContactList items={visiableContacts} onDeleteContact={deleteContact} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}